guix build -L sourcepath newpackage

guix package --install-from-file=my-hello.scm

guix environment -L /storepath --ad-hoc package1 newpackage

guix shell -f guix-packager.scm

git format-patch
./pre-inst-env guix linxu newpackage

[[https://guix.gnu.org/contribute/][Contribute — GNU Guix]]

[[https://guix.gnu.org/manual/en/guix.html#Packaging-Guidelines][GNU Guix Reference Manual]]

https://youtu.be/R8DtPnP4eL8
https://guix.gnu.org/manual/en/html_node/Defining-Packages.html
https://guix.gnu.org/en/blog/2018/a-packaging-tutorial-for-guix/

* Different inputs
- native-inputs :: Required for building but not runtime – installing
  a package through a substitute won't install these inputs.
- inputs :: Installed in the store but not in the profile, as well as
  being present at build time.
- propagated-inputs :: Installed in the store and in the profile, as
  well as being present at build time.
[[https://guix.gnu.org/manual/en/html_node/Invoking-guix-import.html][Invoking guix import (GNU Guix Reference Manual)]]
* unknown license
#+begin_src scheme
  (define custom-license
    (license:fsdg-compatible
     "Custom License Name"
     "https://example.com/custom-license-text"
     "Short description of the license"))
  (define custom-license
    (license:fsdg-compatible
     "Apache-2.0_WITH_LLVM-exception"
     "https://docs.rs/crate/rustix/0.38.34/source/LICENSE-Apache-2.0_WITH_LLVM-exception"
     "Apache-2.0 with LLVM exception"))
#+end_src
* rust
use guix import crate -r /packagename/ > /packagename/.scm
* go
use guix import go -r /packagename/
